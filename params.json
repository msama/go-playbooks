{"name":"Go-playbooks","tagline":"Various hopefully useful playbooks for solving common problems with go","body":"# go-playbooks\r\nGo-playbooks is a collection of various hopefully useful playbooks and examples for solving common problems with go.\r\n\r\nGo is a new and amazin language with a very short learning curve. However how any new language there is always a bit of confusion on how to address common tasks and how to best use use the standard libraries. Go-playbooks is my attempt to provide a reference to help developers adopt GO at its best.\r\n\r\n[![Build Status](https://travis-ci.org/msama/go-playbooks.svg?branch=master)](https://travis-ci.org/msama/go-playbooks)\r\n\r\n## Playbooks\r\n\r\n```\r\n.\r\n├── encoding\r\n│   └── json\r\n│       ├── basetypes-marshalling\r\n│       └── custom-marshaller\r\n└── net\r\n    └── http\r\n        ├── graceful-service-termination\r\n        ├── https-aws-ebs-nginx\r\n        ├── programmatic-http-redirect\r\n        └── request-caching\r\n```\r\n\r\nThe above tree shows all the available playbooks. Playbooks are organised with a tree tructure following the `<package>/<book>` convention. Each playbook contains a `main.go` file which can be used to run it. Alse each playbook contains a `README.md` file with a description of what the playbook does and additional setup instruction.\r\n\r\nTo run a playbook from the root folder you can run the following:\r\n```\r\ncd <package>/<book>\r\ngo run main.go\r\n```\r\nCertain playbook may require additional setup. Please read the `README.md` first.\r\n\r\n## encoding/json\r\n\r\n* <b>[Basetype marshalling](https://github.com/msama/go-playbooks/tree/master/encoding/json/basetypes-marshalling)</b>: how to marshal basetypes and how to handle missing fields.\r\n* <b>[Custom marshalling](https://github.com/msama/go-playbooks/tree/master/encoding/json/custom-marshaller)</b>: how to implement custom marshalling and unmarshalling logic.\r\n\r\n## net/http\r\n\r\n* <b>[Graceful service termination](https://github.com/msama/go-playbooks/tree/master/net/http/graceful-service-termination)</b>: how to gracefully terminate http handling.\r\n* <b>[Serving https with AWS EBS](https://github.com/msama/go-playbooks/tree/master/net/http/https-aws-ebs-nginx)</b>: how to serve https requests with AWS EBS.\r\n* <b>[Programmatic http redirect](https://github.com/msama/go-playbooks/tree/master/net/http/programmatic-http-redirect)</b>: how to programmatically redirecting from http to https.\r\n* <b>[Http request caching](https://github.com/msama/go-playbooks/tree/master/net/http/request-caching)</b>: how to cache http requests.\r\n\r\n\r\n## Contributing\r\n\r\n### Submitting a new playbook\r\n\r\nThe best way to contribute is to follow the Github pull request workflow. Fork go-palybooks, create a functional branch and send a pull request to `msama/master`. \r\n\r\nPlease respect the followign submission guidelines:\r\n* Should be useful: Playbooks need to address a single well defined problem.\r\n* Should be as simple as possible but not simpler: Playbooks have to be easy to read and self contained.\r\n* Must compile: the pull request must compile. Please add new playbooks to Travis.\r\n* Must be well documented: please update or create README.md files for each Playbook.\r\n\r\n### Requesting a new playbook\r\n\r\nIf you are trying to solve a problem and you would like to see a playbook, please open a ticket in Github.\r\n\r\n### Reporting bugs or improving a solution\r\n\r\nIf you see a bug or if you want to suggest a different solution please either send a pull request or open a ticket in Github.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}