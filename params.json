{"name":"Go-playbooks","tagline":"Various hopefully useful playbooks for solving common problems with go","body":"# go-playbooks\r\nVarious hopefully useful playbooks for solving common problems with go.\r\n\r\nEach playbook starts form a GO library and explains how to use it to solve a practival problem.\r\n\r\n\r\n## Sitemap\r\n\r\n```\r\n.\r\n├── encoding\r\n│   └── json\r\n│       ├── basetypes-marshalling\r\n│       └── custom-marshaller\r\n└── net\r\n    └── http\r\n        ├── handling-service-termination\r\n        ├── redirecting-to-https\r\n        │   ├── aws-ebs-nginx\r\n        │   └── handle-redirect\r\n        └── request-caching\r\n```\r\n\r\n## encoding/json\r\n\r\n* <b>Basetype marshalling</b>: how to marshal basetypes and how to handle missing fields.\r\n* <b>Custom marshalling</b>: how to implement custom marshalling and unmarshalling logic.\r\n\r\n## net/http\r\n\r\n* <b>Handling service termination</b>: how to gracefully terminate http handling.\r\n* <b>Serving https with AWS EBS</b>: how to serve https requests with AWS EBS.\r\n* <b>Handling https redirect</b>: how to programmatically redirecting from http to https.\r\n* <b>Http request caching</b>: how to cache http requests.\r\n\r\n# About\r\n\r\nGO is a great language. I am writing these playbooks to help other developers to practice it.\r\n\r\n## How to contribute\r\n\r\nPull requests are welcomed. Also if you want to request a Playbook just open a ticket.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}